clearvars -except 
close all

mes_num=1000000;

for ii=1:10
    
 ii   
 res=zeros(mes_num,7);
 
 tdtu=0.1;
p=1-exp(-tdtu);
serviv=0.005+0.02*ii;
cell_num=1;


flur_start=1000;%round(sqrt(10)^ii)+3 ;
add_noise=false;%false%true;
noise_amp=1;%*ii-0.1;
intencity_for_singel_flur=753*tdtu/0.1;

var_parameter=serviv;


    for jj=1:mes_num
        
 
         
        
frame_num=round(-log(serviv)/tdtu);%-(ii-1)*10;
%%%%%%%%%%%%%%%%%%%%%
[flur,frame_num]=build_flur_matrix(frame_num,cell_num,flur_start,p,add_noise,noise_amp,intencity_for_singel_flur );
frame_numa(jj,ii)=frame_num;
%%%%%%%%%%%%%%%%%%%%%%

% damp  = colcolate_damp( flur,cell_num,frame_num);
 
 damp=1-p;
 b_check(ii,jj)=damp+p-1;
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
 meas_delta=ones(frame_num-1,cell_num);
expectet_delta=ones(frame_num-1,cell_num);
noise=ones(frame_num-1,cell_num);

for j=1:cell_num
    for i=1:frame_num-1
   
      meas_delta(i,j)=flur(i,j)-flur(i+1,j);
      expectet_delta(i,j)=flur(i,j)-flur(i,j)*damp;
      noise(i,j)= expectet_delta(i,j)- meas_delta(i,j);
     
    end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


noise2=noise;
 noise=noise.^2;
 
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% fit line to all data
% bin_num=40;
% % [result_fit_all_data_t_p,result_fit_all_data_t_p_b, a1,b1]= liner_fit_to_noise( expectet_delta,noise,bin_num,damp );
% result_fit_all_data(ii,jj)=1;%result_fit_all_data_t_p;
% result_fit_all_data_b(ii,jj)=1;%result_fit_all_data_t_p_b;
% result_fit_a(ii,jj)=1;%a1;
% result_fit_b(ii,jj)=1;%b1;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%noise=noise-noise*result_fit_all_data_t_p_b/mean2(noise);
%noise=mean2(noise)- (result_fit_all_data_t_p_b);
 
 
 %noise_factor_abs(ii,jj)=1.57*mean2((abs(noise2(1:end-1,:))./sqrt(expectet_delta(2:end,:)))).^2;
%  noise_factor_abs(ii,jj)=1.57*mean2((abs(noise2(1:end,:))./sqrt(expectet_delta(1:end,:)*(damp)))).^2;    
%  
%  fix_noise=(noise(1:end,:)-flur(2:end,:));
%  fix_noise(fix_noise<0)=0;
%  noise_factor=(fix_noise./(expectet_delta(1:end,:)*(damp)));
 
%noise_factor=(noise(1:end,:)./(expectet_delta(1:end,:)*(damp)));

if add_noise==true
  noise_factor=((noise(1:end,:)-flur(1:end-1,:)*(damp)-flur(2:end,:))./(expectet_delta(1:end,:)*(damp)));
else
  noise_factor=(noise(1:end,:)./(expectet_delta(1:end,:)*(damp)));  
end
 noise_anlaze=mean(noise_factor');
      noise_factor_mean=mean(noise_factor(1:end,:));
      
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  artical_res  = artical_new( flur,damp,add_noise );
  artical_res_no_integral  = artical( flur,damp );
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%





res(jj,1)=mean(noise_factor_mean)/intencity_for_singel_flur;%/intencity_for_singel_flur;
res(jj,2)=var(noise_factor_mean)/intencity_for_singel_flur^2;
res(jj,3)=mean(artical_res)/intencity_for_singel_flur;%/intencity_for_singel_flur;
res(jj,4)=var(artical_res)/intencity_for_singel_flur^2;
res(jj,5)=var_parameter;
res(jj,6)=mean(artical_res_no_integral)/intencity_for_singel_flur;%/intencity_for_singel_flur;
res(jj,7)=var(artical_res_no_integral)/intencity_for_singel_flur^2;
    end

  v_var_m(ii)=mean(res(:,1));
v_var_m2(ii)=mean(res(:,3));  
 v_var_m2_artical_res_no_integral(ii)=mean(res(:,6));
mean_var_m(ii)=var(res(:,1));
mean_var_m2(ii)=var(res(:,3)); 
mean_var_m2_artical_res_no_integral(ii)=var(res(:,6)); 






v_m(ii)=var_parameter;    
    
end
% figure(1)
% errorbar(res(:,5),res(:,1),res(:,2))
% hold on
% errorbar(res(:,5),res(:,3),res(:,4))

% result
%gause_fit=gause_fit';
T = table(mean_rate_for_singel_flur,noise_factor_mean,noise_factor_abs,artical_res,result_fit_all_data,gause_fit,'VariableNames',{'rate_for_singel_flur_main' 'noise_factor_mean' 'noise_factor_abs' 'artical_res' 'result_fit_all_data' 'gause_fit'})
%summery(1,1)=mean(mean_rate_for_singel_flur);
summery(1,1)=mean(noise_factor_mean);
%summery(1,3)=mean(noise_factor_abs);
summery(1,2)=mean(artical_res);
% summery(1,5)=mean(result_fit_all_data);
% summery(1,6)=mean(gause_fit);


% summery(2,1)=var(mean_rate_for_singel_flur);
 summery(2,1)=var(noise_factor_mean);
% summery(2,3)=var(noise_factor_abs);
 summery(2,2)=var(artical_res);
% summery(2,5)=var(result_fit_all_data);
% summery(2,6)=var(gause_fit);


%table(summery','RowNames',{'rate_for_singel_flur_main' 'noise_factor_mean' 'noise_factor_abs' 'artical_res' 'result_fit_all_data' 'gause_fit'})
%table(summery','RowNames',{'noise_factor_mean'  'artical_res' })
%res
% 
% R = normrnd(0,5,10000,1);
% [N,edges] = histcounts(R);
%  edges=edges(1:end-1);
% edges=edges+edges(2)/2-edges(1)/2;
figure(2)
errorbar(100*v_m,v_var_m,mean_var_m)
hold on
errorbar(100*v_m,v_var_m2,mean_var_m2)
 errorbar(100*v_m,v_var_m2_artical_res_no_integral,mean_var_m2_artical_res_no_integral)     
legend('uncorelated','corelated','corelated with no integral')
xlabel('Percentage of survivors [%]')
ylabel('\nu^{2}/\nu_{est}')
mean(res)
% figure(3)
% semilogx(v_m,mean_var_m2,'pb')
% hold on
% %plot(v_m,0.8-3./(5*v_m),'*g')
% v_m_line=1:1:v_m(end);
% semilogx(v_m_line,0.8-3./(5*v_m_line),'g')
% 
% semilogx(v_m,mean_var_m,'dr')
% 
% 
% semilogx(v_m,mean_var_m2_artical_res_no_integral,'hr')
% semilogx(v_m_line,2-6./v_m_line+1./(v_m_line*p*(1-p)),'k')
% frame_numa_mean=mean(frame_numa);
% semilogx(v_m,(2-6./v_m+1./(v_m*p*(1-p)))./(frame_numa_mean-1),'k')
% legend( 'corelated','corelated teoretical','uncorelated','corelated no integral','uncorelated singel','uncorelated teoretical')
